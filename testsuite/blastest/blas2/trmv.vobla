/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
import datastruct.triangular;

function trmv(in A: TriangularMatrix<Value>[n][n], out X: Value[n]) {
  for(i, Ai, AiBeg in A.triangle.iterateFromBigRow) {
    X[i] = sum(Aij*(X[AiBeg:len(Ai)+AiBeg-1])[j] forall j, Aij in Ai.sparse);
  }
}

export trmv<Float>(A is          UpperTriangular, X is          Column) as strmv_n_eun;
export trmv<Float>(A is          UpperTriangular, X is Reversed Column) as strmv_n_eur;
export trmv<Float>(A is          LowerTriangular, X is          Column) as strmv_n_eln;
export trmv<Float>(A is          LowerTriangular, X is Reversed Column) as strmv_n_elr;
export trmv<Float>(A is      UnitUpperTriangular, X is          Column) as strmv_n_dun;
export trmv<Float>(A is      UnitUpperTriangular, X is Reversed Column) as strmv_n_dur;
export trmv<Float>(A is      UnitLowerTriangular, X is          Column) as strmv_n_dln;
export trmv<Float>(A is      UnitLowerTriangular, X is Reversed Column) as strmv_n_dlr;
export trmv<Float>(A is     TransUpperTriangular, X is          Column) as strmv_t_eun;
export trmv<Float>(A is     TransUpperTriangular, X is Reversed Column) as strmv_t_eur;
export trmv<Float>(A is     TransLowerTriangular, X is          Column) as strmv_t_eln;
export trmv<Float>(A is     TransLowerTriangular, X is Reversed Column) as strmv_t_elr;
export trmv<Float>(A is TransUnitUpperTriangular, X is          Column) as strmv_t_dun;
export trmv<Float>(A is TransUnitUpperTriangular, X is Reversed Column) as strmv_t_dur;
export trmv<Float>(A is TransUnitLowerTriangular, X is          Column) as strmv_t_dln;
export trmv<Float>(A is TransUnitLowerTriangular, X is Reversed Column) as strmv_t_dlr;

export trmv<Double>(A is          UpperTriangular, X is          Column) as dtrmv_n_eun;
export trmv<Double>(A is          UpperTriangular, X is Reversed Column) as dtrmv_n_eur;
export trmv<Double>(A is          LowerTriangular, X is          Column) as dtrmv_n_eln;
export trmv<Double>(A is          LowerTriangular, X is Reversed Column) as dtrmv_n_elr;
export trmv<Double>(A is      UnitUpperTriangular, X is          Column) as dtrmv_n_dun;
export trmv<Double>(A is      UnitUpperTriangular, X is Reversed Column) as dtrmv_n_dur;
export trmv<Double>(A is      UnitLowerTriangular, X is          Column) as dtrmv_n_dln;
export trmv<Double>(A is      UnitLowerTriangular, X is Reversed Column) as dtrmv_n_dlr;
export trmv<Double>(A is     TransUpperTriangular, X is          Column) as dtrmv_t_eun;
export trmv<Double>(A is     TransUpperTriangular, X is Reversed Column) as dtrmv_t_eur;
export trmv<Double>(A is     TransLowerTriangular, X is          Column) as dtrmv_t_eln;
export trmv<Double>(A is     TransLowerTriangular, X is Reversed Column) as dtrmv_t_elr;
export trmv<Double>(A is TransUnitUpperTriangular, X is          Column) as dtrmv_t_dun;
export trmv<Double>(A is TransUnitUpperTriangular, X is Reversed Column) as dtrmv_t_dur;
export trmv<Double>(A is TransUnitLowerTriangular, X is          Column) as dtrmv_t_dln;
export trmv<Double>(A is TransUnitLowerTriangular, X is Reversed Column) as dtrmv_t_dlr;

export trmv<Complex Float>(A is                UpperTriangular, X is          Column) as ctrmv_n_eun;
export trmv<Complex Float>(A is                UpperTriangular, X is Reversed Column) as ctrmv_n_eur;
export trmv<Complex Float>(A is                LowerTriangular, X is          Column) as ctrmv_n_eln;
export trmv<Complex Float>(A is                LowerTriangular, X is Reversed Column) as ctrmv_n_elr;
export trmv<Complex Float>(A is            UnitUpperTriangular, X is          Column) as ctrmv_n_dun;
export trmv<Complex Float>(A is            UnitUpperTriangular, X is Reversed Column) as ctrmv_n_dur;
export trmv<Complex Float>(A is            UnitLowerTriangular, X is          Column) as ctrmv_n_dln;
export trmv<Complex Float>(A is            UnitLowerTriangular, X is Reversed Column) as ctrmv_n_dlr;
export trmv<Complex Float>(A is           TransUpperTriangular, X is          Column) as ctrmv_t_eun;
export trmv<Complex Float>(A is           TransUpperTriangular, X is Reversed Column) as ctrmv_t_eur;
export trmv<Complex Float>(A is           TransLowerTriangular, X is          Column) as ctrmv_t_eln;
export trmv<Complex Float>(A is           TransLowerTriangular, X is Reversed Column) as ctrmv_t_elr;
export trmv<Complex Float>(A is       TransUnitUpperTriangular, X is          Column) as ctrmv_t_dun;
export trmv<Complex Float>(A is       TransUnitUpperTriangular, X is Reversed Column) as ctrmv_t_dur;
export trmv<Complex Float>(A is       TransUnitLowerTriangular, X is          Column) as ctrmv_t_dln;
export trmv<Complex Float>(A is       TransUnitLowerTriangular, X is Reversed Column) as ctrmv_t_dlr;
export trmv<Complex Float>(A is Conjugated     UpperTriangular, X is          Column) as ctrmv_c_eun;
export trmv<Complex Float>(A is Conjugated     UpperTriangular, X is Reversed Column) as ctrmv_c_eur;
export trmv<Complex Float>(A is Conjugated     LowerTriangular, X is          Column) as ctrmv_c_eln;
export trmv<Complex Float>(A is Conjugated     LowerTriangular, X is Reversed Column) as ctrmv_c_elr;
export trmv<Complex Float>(A is Conjugated UnitUpperTriangular, X is          Column) as ctrmv_c_dun;
export trmv<Complex Float>(A is Conjugated UnitUpperTriangular, X is Reversed Column) as ctrmv_c_dur;
export trmv<Complex Float>(A is Conjugated UnitLowerTriangular, X is          Column) as ctrmv_c_dln;
export trmv<Complex Float>(A is Conjugated UnitLowerTriangular, X is Reversed Column) as ctrmv_c_dlr;

export trmv<Complex Double>(A is                UpperTriangular, X is          Column) as ztrmv_n_eun;
export trmv<Complex Double>(A is                UpperTriangular, X is Reversed Column) as ztrmv_n_eur;
export trmv<Complex Double>(A is                LowerTriangular, X is          Column) as ztrmv_n_eln;
export trmv<Complex Double>(A is                LowerTriangular, X is Reversed Column) as ztrmv_n_elr;
export trmv<Complex Double>(A is            UnitUpperTriangular, X is          Column) as ztrmv_n_dun;
export trmv<Complex Double>(A is            UnitUpperTriangular, X is Reversed Column) as ztrmv_n_dur;
export trmv<Complex Double>(A is            UnitLowerTriangular, X is          Column) as ztrmv_n_dln;
export trmv<Complex Double>(A is            UnitLowerTriangular, X is Reversed Column) as ztrmv_n_dlr;
export trmv<Complex Double>(A is           TransUpperTriangular, X is          Column) as ztrmv_t_eun;
export trmv<Complex Double>(A is           TransUpperTriangular, X is Reversed Column) as ztrmv_t_eur;
export trmv<Complex Double>(A is           TransLowerTriangular, X is          Column) as ztrmv_t_eln;
export trmv<Complex Double>(A is           TransLowerTriangular, X is Reversed Column) as ztrmv_t_elr;
export trmv<Complex Double>(A is       TransUnitUpperTriangular, X is          Column) as ztrmv_t_dun;
export trmv<Complex Double>(A is       TransUnitUpperTriangular, X is Reversed Column) as ztrmv_t_dur;
export trmv<Complex Double>(A is       TransUnitLowerTriangular, X is          Column) as ztrmv_t_dln;
export trmv<Complex Double>(A is       TransUnitLowerTriangular, X is Reversed Column) as ztrmv_t_dlr;
export trmv<Complex Double>(A is Conjugated     UpperTriangular, X is          Column) as ztrmv_c_eun;
export trmv<Complex Double>(A is Conjugated     UpperTriangular, X is Reversed Column) as ztrmv_c_eur;
export trmv<Complex Double>(A is Conjugated     LowerTriangular, X is          Column) as ztrmv_c_eln;
export trmv<Complex Double>(A is Conjugated     LowerTriangular, X is Reversed Column) as ztrmv_c_elr;
export trmv<Complex Double>(A is Conjugated UnitUpperTriangular, X is          Column) as ztrmv_c_dun;
export trmv<Complex Double>(A is Conjugated UnitUpperTriangular, X is Reversed Column) as ztrmv_c_dur;
export trmv<Complex Double>(A is Conjugated UnitLowerTriangular, X is          Column) as ztrmv_c_dln;
export trmv<Complex Double>(A is Conjugated UnitLowerTriangular, X is Reversed Column) as ztrmv_c_dlr;

export trmv<Float>(A is          UpperPackTriangular, X is          Column) as stpmv_n_eun;
export trmv<Float>(A is          UpperPackTriangular, X is Reversed Column) as stpmv_n_eur;
export trmv<Float>(A is          LowerPackTriangular, X is          Column) as stpmv_n_eln;
export trmv<Float>(A is          LowerPackTriangular, X is Reversed Column) as stpmv_n_elr;
export trmv<Float>(A is      UnitUpperPackTriangular, X is          Column) as stpmv_n_dun;
export trmv<Float>(A is      UnitUpperPackTriangular, X is Reversed Column) as stpmv_n_dur;
export trmv<Float>(A is      UnitLowerPackTriangular, X is          Column) as stpmv_n_dln;
export trmv<Float>(A is      UnitLowerPackTriangular, X is Reversed Column) as stpmv_n_dlr;
export trmv<Float>(A is     TransUpperPackTriangular, X is          Column) as stpmv_t_eun;
export trmv<Float>(A is     TransUpperPackTriangular, X is Reversed Column) as stpmv_t_eur;
export trmv<Float>(A is     TransLowerPackTriangular, X is          Column) as stpmv_t_eln;
export trmv<Float>(A is     TransLowerPackTriangular, X is Reversed Column) as stpmv_t_elr;
export trmv<Float>(A is TransUnitUpperPackTriangular, X is          Column) as stpmv_t_dun;
export trmv<Float>(A is TransUnitUpperPackTriangular, X is Reversed Column) as stpmv_t_dur;
export trmv<Float>(A is TransUnitLowerPackTriangular, X is          Column) as stpmv_t_dln;
export trmv<Float>(A is TransUnitLowerPackTriangular, X is Reversed Column) as stpmv_t_dlr;

export trmv<Double>(A is          UpperPackTriangular, X is          Column) as dtpmv_n_eun;
export trmv<Double>(A is          UpperPackTriangular, X is Reversed Column) as dtpmv_n_eur;
export trmv<Double>(A is     TransUpperPackTriangular, X is          Column) as dtpmv_t_eun;
export trmv<Double>(A is     TransUpperPackTriangular, X is Reversed Column) as dtpmv_t_eur;
export trmv<Double>(A is          LowerPackTriangular, X is          Column) as dtpmv_n_eln;
export trmv<Double>(A is          LowerPackTriangular, X is Reversed Column) as dtpmv_n_elr;
export trmv<Double>(A is     TransLowerPackTriangular, X is          Column) as dtpmv_t_eln;
export trmv<Double>(A is     TransLowerPackTriangular, X is Reversed Column) as dtpmv_t_elr;
export trmv<Double>(A is      UnitUpperPackTriangular, X is          Column) as dtpmv_n_dun;
export trmv<Double>(A is      UnitUpperPackTriangular, X is Reversed Column) as dtpmv_n_dur;
export trmv<Double>(A is      UnitLowerPackTriangular, X is          Column) as dtpmv_n_dln;
export trmv<Double>(A is      UnitLowerPackTriangular, X is Reversed Column) as dtpmv_n_dlr;
export trmv<Double>(A is TransUnitUpperPackTriangular, X is          Column) as dtpmv_t_dun;
export trmv<Double>(A is TransUnitUpperPackTriangular, X is Reversed Column) as dtpmv_t_dur;
export trmv<Double>(A is TransUnitLowerPackTriangular, X is          Column) as dtpmv_t_dln;
export trmv<Double>(A is TransUnitLowerPackTriangular, X is Reversed Column) as dtpmv_t_dlr;

export trmv<Complex Float>(A is                     UpperPackTriangular, X is          Column) as ctpmv_n_eun;
export trmv<Complex Float>(A is                     UpperPackTriangular, X is Reversed Column) as ctpmv_n_eur;
export trmv<Complex Float>(A is                     LowerPackTriangular, X is          Column) as ctpmv_n_eln;
export trmv<Complex Float>(A is                     LowerPackTriangular, X is Reversed Column) as ctpmv_n_elr;
export trmv<Complex Float>(A is                 UnitUpperPackTriangular, X is          Column) as ctpmv_n_dun;
export trmv<Complex Float>(A is                 UnitUpperPackTriangular, X is Reversed Column) as ctpmv_n_dur;
export trmv<Complex Float>(A is                 UnitLowerPackTriangular, X is          Column) as ctpmv_n_dln;
export trmv<Complex Float>(A is                 UnitLowerPackTriangular, X is Reversed Column) as ctpmv_n_dlr;
export trmv<Complex Float>(A is                TransUpperPackTriangular, X is          Column) as ctpmv_t_eun;
export trmv<Complex Float>(A is                TransUpperPackTriangular, X is Reversed Column) as ctpmv_t_eur;
export trmv<Complex Float>(A is                TransLowerPackTriangular, X is          Column) as ctpmv_t_eln;
export trmv<Complex Float>(A is                TransLowerPackTriangular, X is Reversed Column) as ctpmv_t_elr;
export trmv<Complex Float>(A is            TransUnitUpperPackTriangular, X is          Column) as ctpmv_t_dun;
export trmv<Complex Float>(A is            TransUnitUpperPackTriangular, X is Reversed Column) as ctpmv_t_dur;
export trmv<Complex Float>(A is            TransUnitLowerPackTriangular, X is          Column) as ctpmv_t_dln;
export trmv<Complex Float>(A is            TransUnitLowerPackTriangular, X is Reversed Column) as ctpmv_t_dlr;
export trmv<Complex Float>(A is Conjugated     TransUpperPackTriangular, X is          Column) as ctpmv_u_eun;
export trmv<Complex Float>(A is Conjugated     TransUpperPackTriangular, X is Reversed Column) as ctpmv_u_eur;
export trmv<Complex Float>(A is Conjugated     TransLowerPackTriangular, X is          Column) as ctpmv_u_eln;
export trmv<Complex Float>(A is Conjugated     TransLowerPackTriangular, X is Reversed Column) as ctpmv_u_elr;
export trmv<Complex Float>(A is Conjugated TransUnitUpperPackTriangular, X is          Column) as ctpmv_u_dun;
export trmv<Complex Float>(A is Conjugated TransUnitUpperPackTriangular, X is Reversed Column) as ctpmv_u_dur;
export trmv<Complex Float>(A is Conjugated TransUnitLowerPackTriangular, X is          Column) as ctpmv_u_dln;
export trmv<Complex Float>(A is Conjugated TransUnitLowerPackTriangular, X is Reversed Column) as ctpmv_u_dlr;

export trmv<Complex Double>(A is                     UpperPackTriangular, X is          Column) as ztpmv_n_eun;
export trmv<Complex Double>(A is                     UpperPackTriangular, X is Reversed Column) as ztpmv_n_eur;
export trmv<Complex Double>(A is                     LowerPackTriangular, X is          Column) as ztpmv_n_eln;
export trmv<Complex Double>(A is                     LowerPackTriangular, X is Reversed Column) as ztpmv_n_elr;
export trmv<Complex Double>(A is                 UnitUpperPackTriangular, X is          Column) as ztpmv_n_dun;
export trmv<Complex Double>(A is                 UnitUpperPackTriangular, X is Reversed Column) as ztpmv_n_dur;
export trmv<Complex Double>(A is                 UnitLowerPackTriangular, X is          Column) as ztpmv_n_dln;
export trmv<Complex Double>(A is                 UnitLowerPackTriangular, X is Reversed Column) as ztpmv_n_dlr;
export trmv<Complex Double>(A is                TransUpperPackTriangular, X is          Column) as ztpmv_t_eun;
export trmv<Complex Double>(A is                TransUpperPackTriangular, X is Reversed Column) as ztpmv_t_eur;
export trmv<Complex Double>(A is                TransLowerPackTriangular, X is          Column) as ztpmv_t_eln;
export trmv<Complex Double>(A is                TransLowerPackTriangular, X is Reversed Column) as ztpmv_t_elr;
export trmv<Complex Double>(A is            TransUnitUpperPackTriangular, X is          Column) as ztpmv_t_dun;
export trmv<Complex Double>(A is            TransUnitUpperPackTriangular, X is Reversed Column) as ztpmv_t_dur;
export trmv<Complex Double>(A is            TransUnitLowerPackTriangular, X is          Column) as ztpmv_t_dln;
export trmv<Complex Double>(A is            TransUnitLowerPackTriangular, X is Reversed Column) as ztpmv_t_dlr;
export trmv<Complex Double>(A is Conjugated     TransUpperPackTriangular, X is          Column) as ztpmv_u_eun;
export trmv<Complex Double>(A is Conjugated     TransUpperPackTriangular, X is Reversed Column) as ztpmv_u_eur;
export trmv<Complex Double>(A is Conjugated     TransLowerPackTriangular, X is          Column) as ztpmv_u_eln;
export trmv<Complex Double>(A is Conjugated     TransLowerPackTriangular, X is Reversed Column) as ztpmv_u_elr;
export trmv<Complex Double>(A is Conjugated TransUnitUpperPackTriangular, X is          Column) as ztpmv_u_dun;
export trmv<Complex Double>(A is Conjugated TransUnitUpperPackTriangular, X is Reversed Column) as ztpmv_u_dur;
export trmv<Complex Double>(A is Conjugated TransUnitLowerPackTriangular, X is          Column) as ztpmv_u_dln;
export trmv<Complex Double>(A is Conjugated TransUnitLowerPackTriangular, X is Reversed Column) as ztpmv_u_dlr;

export trmv<Float>(A is          UpperBandTriangular, X is          Column) as stbmv_n_eun;
export trmv<Float>(A is          UpperBandTriangular, X is Reversed Column) as stbmv_n_eur;
export trmv<Float>(A is          LowerBandTriangular, X is          Column) as stbmv_n_eln;
export trmv<Float>(A is          LowerBandTriangular, X is Reversed Column) as stbmv_n_elr;
export trmv<Float>(A is      UnitUpperBandTriangular, X is          Column) as stbmv_n_dun;
export trmv<Float>(A is      UnitUpperBandTriangular, X is Reversed Column) as stbmv_n_dur;
export trmv<Float>(A is      UnitLowerBandTriangular, X is          Column) as stbmv_n_dln;
export trmv<Float>(A is      UnitLowerBandTriangular, X is Reversed Column) as stbmv_n_dlr;
export trmv<Float>(A is     TransUpperBandTriangular, X is          Column) as stbmv_t_eun;
export trmv<Float>(A is     TransUpperBandTriangular, X is Reversed Column) as stbmv_t_eur;
export trmv<Float>(A is     TransLowerBandTriangular, X is          Column) as stbmv_t_eln;
export trmv<Float>(A is     TransLowerBandTriangular, X is Reversed Column) as stbmv_t_elr;
export trmv<Float>(A is TransUnitUpperBandTriangular, X is          Column) as stbmv_t_dun;
export trmv<Float>(A is TransUnitUpperBandTriangular, X is Reversed Column) as stbmv_t_dur;
export trmv<Float>(A is TransUnitLowerBandTriangular, X is          Column) as stbmv_t_dln;
export trmv<Float>(A is TransUnitLowerBandTriangular, X is Reversed Column) as stbmv_t_dlr;

export trmv<Double>(A is          UpperBandTriangular, X is          Column) as dtbmv_n_eun;
export trmv<Double>(A is          UpperBandTriangular, X is Reversed Column) as dtbmv_n_eur;
export trmv<Double>(A is          LowerBandTriangular, X is          Column) as dtbmv_n_eln;
export trmv<Double>(A is          LowerBandTriangular, X is Reversed Column) as dtbmv_n_elr;
export trmv<Double>(A is      UnitUpperBandTriangular, X is          Column) as dtbmv_n_dun;
export trmv<Double>(A is      UnitUpperBandTriangular, X is Reversed Column) as dtbmv_n_dur;
export trmv<Double>(A is      UnitLowerBandTriangular, X is          Column) as dtbmv_n_dln;
export trmv<Double>(A is      UnitLowerBandTriangular, X is Reversed Column) as dtbmv_n_dlr;
export trmv<Double>(A is     TransUpperBandTriangular, X is          Column) as dtbmv_t_eun;
export trmv<Double>(A is     TransUpperBandTriangular, X is Reversed Column) as dtbmv_t_eur;
export trmv<Double>(A is     TransLowerBandTriangular, X is          Column) as dtbmv_t_eln;
export trmv<Double>(A is     TransLowerBandTriangular, X is Reversed Column) as dtbmv_t_elr;
export trmv<Double>(A is TransUnitUpperBandTriangular, X is          Column) as dtbmv_t_dun;
export trmv<Double>(A is TransUnitUpperBandTriangular, X is Reversed Column) as dtbmv_t_dur;
export trmv<Double>(A is TransUnitLowerBandTriangular, X is          Column) as dtbmv_t_dln;
export trmv<Double>(A is TransUnitLowerBandTriangular, X is Reversed Column) as dtbmv_t_dlr;

export trmv<Complex Float>(A is                     UpperBandTriangular, X is          Column) as ctbmv_n_eun;
export trmv<Complex Float>(A is                     UpperBandTriangular, X is Reversed Column) as ctbmv_n_eur;
export trmv<Complex Float>(A is                     LowerBandTriangular, X is          Column) as ctbmv_n_eln;
export trmv<Complex Float>(A is                     LowerBandTriangular, X is Reversed Column) as ctbmv_n_elr;
export trmv<Complex Float>(A is                 UnitUpperBandTriangular, X is          Column) as ctbmv_n_dun;
export trmv<Complex Float>(A is                 UnitUpperBandTriangular, X is Reversed Column) as ctbmv_n_dur;
export trmv<Complex Float>(A is                 UnitLowerBandTriangular, X is          Column) as ctbmv_n_dln;
export trmv<Complex Float>(A is                 UnitLowerBandTriangular, X is Reversed Column) as ctbmv_n_dlr;
export trmv<Complex Float>(A is                TransUpperBandTriangular, X is          Column) as ctbmv_t_eun;
export trmv<Complex Float>(A is                TransUpperBandTriangular, X is Reversed Column) as ctbmv_t_eur;
export trmv<Complex Float>(A is                TransLowerBandTriangular, X is          Column) as ctbmv_t_eln;
export trmv<Complex Float>(A is                TransLowerBandTriangular, X is Reversed Column) as ctbmv_t_elr;
export trmv<Complex Float>(A is            TransUnitUpperBandTriangular, X is          Column) as ctbmv_t_dun;
export trmv<Complex Float>(A is            TransUnitUpperBandTriangular, X is Reversed Column) as ctbmv_t_dur;
export trmv<Complex Float>(A is            TransUnitLowerBandTriangular, X is          Column) as ctbmv_t_dln;
export trmv<Complex Float>(A is            TransUnitLowerBandTriangular, X is Reversed Column) as ctbmv_t_dlr;
export trmv<Complex Float>(A is Conjugated     TransUpperBandTriangular, X is          Column) as ctbmv_u_eun;
export trmv<Complex Float>(A is Conjugated     TransUpperBandTriangular, X is Reversed Column) as ctbmv_u_eur;
export trmv<Complex Float>(A is Conjugated     TransLowerBandTriangular, X is          Column) as ctbmv_u_eln;
export trmv<Complex Float>(A is Conjugated     TransLowerBandTriangular, X is Reversed Column) as ctbmv_u_elr;
export trmv<Complex Float>(A is Conjugated TransUnitUpperBandTriangular, X is          Column) as ctbmv_u_dun;
export trmv<Complex Float>(A is Conjugated TransUnitUpperBandTriangular, X is Reversed Column) as ctbmv_u_dur;
export trmv<Complex Float>(A is Conjugated TransUnitLowerBandTriangular, X is          Column) as ctbmv_u_dln;
export trmv<Complex Float>(A is Conjugated TransUnitLowerBandTriangular, X is Reversed Column) as ctbmv_u_dlr;

export trmv<Complex Double>(A is                     UpperBandTriangular, X is          Column) as ztbmv_n_eun;
export trmv<Complex Double>(A is                     UpperBandTriangular, X is Reversed Column) as ztbmv_n_eur;
export trmv<Complex Double>(A is                     LowerBandTriangular, X is          Column) as ztbmv_n_eln;
export trmv<Complex Double>(A is                     LowerBandTriangular, X is Reversed Column) as ztbmv_n_elr;
export trmv<Complex Double>(A is                 UnitUpperBandTriangular, X is          Column) as ztbmv_n_dun;
export trmv<Complex Double>(A is                 UnitUpperBandTriangular, X is Reversed Column) as ztbmv_n_dur;
export trmv<Complex Double>(A is                 UnitLowerBandTriangular, X is          Column) as ztbmv_n_dln;
export trmv<Complex Double>(A is                 UnitLowerBandTriangular, X is Reversed Column) as ztbmv_n_dlr;
export trmv<Complex Double>(A is                TransUpperBandTriangular, X is          Column) as ztbmv_t_eun;
export trmv<Complex Double>(A is                TransUpperBandTriangular, X is Reversed Column) as ztbmv_t_eur;
export trmv<Complex Double>(A is                TransLowerBandTriangular, X is          Column) as ztbmv_t_eln;
export trmv<Complex Double>(A is                TransLowerBandTriangular, X is Reversed Column) as ztbmv_t_elr;
export trmv<Complex Double>(A is            TransUnitUpperBandTriangular, X is          Column) as ztbmv_t_dun;
export trmv<Complex Double>(A is            TransUnitUpperBandTriangular, X is Reversed Column) as ztbmv_t_dur;
export trmv<Complex Double>(A is            TransUnitLowerBandTriangular, X is          Column) as ztbmv_t_dln;
export trmv<Complex Double>(A is            TransUnitLowerBandTriangular, X is Reversed Column) as ztbmv_t_dlr;
export trmv<Complex Double>(A is Conjugated     TransUpperBandTriangular, X is          Column) as ztbmv_u_eun;
export trmv<Complex Double>(A is Conjugated     TransUpperBandTriangular, X is Reversed Column) as ztbmv_u_eur;
export trmv<Complex Double>(A is Conjugated     TransLowerBandTriangular, X is          Column) as ztbmv_u_eln;
export trmv<Complex Double>(A is Conjugated     TransLowerBandTriangular, X is Reversed Column) as ztbmv_u_elr;
export trmv<Complex Double>(A is Conjugated TransUnitUpperBandTriangular, X is          Column) as ztbmv_u_dun;
export trmv<Complex Double>(A is Conjugated TransUnitUpperBandTriangular, X is Reversed Column) as ztbmv_u_dur;
export trmv<Complex Double>(A is Conjugated TransUnitLowerBandTriangular, X is          Column) as ztbmv_u_dln;
export trmv<Complex Double>(A is Conjugated TransUnitLowerBandTriangular, X is Reversed Column) as ztbmv_u_dlr;
