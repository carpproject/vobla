/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
import datastruct.symmetric;

// Computes A <- alpha*X*Y^H + Y*(alpha*X)^H + A
function syr2(alpha: Value, in X: Value[n], in Y: Value[n], out A: SymmetricMatrix<Value>[n][n]) {
  Aij += alpha*(X[i]*Y[j] + X[j]*Y[i]) forall i, j, Aij in A.upperTriangle;
}

export syr2<Float>(A is UpperSymmetric, X is          Column, Y is          Column) as ssyr2_unn;
export syr2<Float>(A is UpperSymmetric, X is          Column, Y is Reversed Column) as ssyr2_unr;
export syr2<Float>(A is UpperSymmetric, X is Reversed Column, Y is          Column) as ssyr2_urn;
export syr2<Float>(A is UpperSymmetric, X is Reversed Column, Y is Reversed Column) as ssyr2_urr;
export syr2<Float>(A is LowerSymmetric, X is          Column, Y is          Column) as ssyr2_lnn;
export syr2<Float>(A is LowerSymmetric, X is          Column, Y is Reversed Column) as ssyr2_lnr;
export syr2<Float>(A is LowerSymmetric, X is Reversed Column, Y is          Column) as ssyr2_lrn;
export syr2<Float>(A is LowerSymmetric, X is Reversed Column, Y is Reversed Column) as ssyr2_lrr;

export syr2<Double>(A is UpperSymmetric, X is          Column, Y is          Column) as dsyr2_unn;
export syr2<Double>(A is UpperSymmetric, X is          Column, Y is Reversed Column) as dsyr2_unr;
export syr2<Double>(A is UpperSymmetric, X is Reversed Column, Y is          Column) as dsyr2_urn;
export syr2<Double>(A is UpperSymmetric, X is Reversed Column, Y is Reversed Column) as dsyr2_urr;
export syr2<Double>(A is LowerSymmetric, X is          Column, Y is          Column) as dsyr2_lnn;
export syr2<Double>(A is LowerSymmetric, X is          Column, Y is Reversed Column) as dsyr2_lnr;
export syr2<Double>(A is LowerSymmetric, X is Reversed Column, Y is          Column) as dsyr2_lrn;
export syr2<Double>(A is LowerSymmetric, X is Reversed Column, Y is Reversed Column) as dsyr2_lrr;

export syr2<Float>(A is UpperPackSymmetric, X is          Column, Y is          Column) as sspr2_unn;
export syr2<Float>(A is UpperPackSymmetric, X is          Column, Y is Reversed Column) as sspr2_unr;
export syr2<Float>(A is UpperPackSymmetric, X is Reversed Column, Y is          Column) as sspr2_urn;
export syr2<Float>(A is UpperPackSymmetric, X is Reversed Column, Y is Reversed Column) as sspr2_urr;
export syr2<Float>(A is LowerPackSymmetric, X is          Column, Y is          Column) as sspr2_lnn;
export syr2<Float>(A is LowerPackSymmetric, X is          Column, Y is Reversed Column) as sspr2_lnr;
export syr2<Float>(A is LowerPackSymmetric, X is Reversed Column, Y is          Column) as sspr2_lrn;
export syr2<Float>(A is LowerPackSymmetric, X is Reversed Column, Y is Reversed Column) as sspr2_lrr;

export syr2<Double>(A is UpperPackSymmetric, X is          Column, Y is          Column) as dspr2_unn;
export syr2<Double>(A is UpperPackSymmetric, X is          Column, Y is Reversed Column) as dspr2_unr;
export syr2<Double>(A is UpperPackSymmetric, X is Reversed Column, Y is          Column) as dspr2_urn;
export syr2<Double>(A is UpperPackSymmetric, X is Reversed Column, Y is Reversed Column) as dspr2_urr;
export syr2<Double>(A is LowerPackSymmetric, X is          Column, Y is          Column) as dspr2_lnn;
export syr2<Double>(A is LowerPackSymmetric, X is          Column, Y is Reversed Column) as dspr2_lnr;
export syr2<Double>(A is LowerPackSymmetric, X is Reversed Column, Y is          Column) as dspr2_lrn;
export syr2<Double>(A is LowerPackSymmetric, X is Reversed Column, Y is Reversed Column) as dspr2_lrr;
