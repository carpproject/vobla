/*
 * Copyright (c) 2013-2014, ARM Limited
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
import datastruct.hermitian;

// Computes Y <- alpha*X*X^H + A
function her(alpha: Real, in X: Complex[n], out A: HermitianMatrix<Complex>[n][n]) {
  Aij += alpha*X[i]*Conjugated(X[j+1]) forall i, j, Aij in A.upperTriangle;
  Aii += alpha*(Re(X[i])*Re(X[i]) + Im(X[i])*Im(X[i]))
    forall i, Aii in A.diagonal;
}

export her<Float>(A is Conjugated UpperHermitian, X is          Column) as cher_un;
export her<Float>(A is Conjugated UpperHermitian, X is Reversed Column) as cher_ur;
export her<Float>(A is            LowerHermitian, X is          Column) as cher_ln;
export her<Float>(A is            LowerHermitian, X is Reversed Column) as cher_lr;

export her<Float>(A is            UpperPackHermitian, X is          Column) as chpr_un;
export her<Float>(A is            UpperPackHermitian, X is Reversed Column) as chpr_ur;
export her<Float>(A is Conjugated LowerPackHermitian, X is          Column) as chpr_ln;
export her<Float>(A is Conjugated LowerPackHermitian, X is Reversed Column) as chpr_lr;

export her<Double>(A is Conjugated UpperHermitian, X is          Column) as zher_un;
export her<Double>(A is Conjugated UpperHermitian, X is Reversed Column) as zher_ur;
export her<Double>(A is            LowerHermitian, X is          Column) as zher_ln;
export her<Double>(A is            LowerHermitian, X is Reversed Column) as zher_lr;

export her<Double>(A is            UpperPackHermitian, X is          Column) as zhpr_un;
export her<Double>(A is            UpperPackHermitian, X is Reversed Column) as zhpr_ur;
export her<Double>(A is Conjugated LowerPackHermitian, X is          Column) as zhpr_ln;
export her<Double>(A is Conjugated LowerPackHermitian, X is Reversed Column) as zhpr_lr;
